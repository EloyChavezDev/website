---
import ImageMod from "@/components/ImageMod.astro";
import Base from "@/layouts/Base.astro";
import { markdownify } from "@/lib/utils/textConverter";
import CallToAction from "@/partials/CallToAction.astro";
import Testimonial from "@/partials/Testimonial.astro";
import type { Button } from "@/types";
import type { CollectionEntry } from "astro:content";
import { getEntry } from "astro:content";


interface Homepage {
  banner: {
    name: string;
    title: string;
    tagline: string;
    image: string;
    button: Button;
  };
  projects: {
    title: string;
    description: string;
    items: Array<{
      title: string;
      description: string;
      icon: string;
      links: Array<{
        label: string;
        url: string;
      }>;
    }>;
  };
  publications: {
    title: string;
    description: string;
    items: Array<{
      title: string;
      description: string;
      journal: string;
      year: string;
      icon: string;
      links: Array<{
        label: string;
        url: string;
      }>;
    }>;
  };
  cta: {
    title: string;
    description: string;
    links: Array<{
      label: string;
      url: string;
    }>;
  };
}

const homepage = (await getEntry(
  "homepage",
  "-index"
)) as CollectionEntry<"homepage">;

const testimonial = (await getEntry(
  "testimonialSection",
  "testimonial"
)) as CollectionEntry<"testimonialSection">;

const call_to_action = (await getEntry(
  "ctaSection",
  "call-to-action"
)) as CollectionEntry<"ctaSection">;

const { banner, projects, publications, cta } = homepage.data as Homepage;
---

<Base>
  <!-- Banner -->
  <section class="section pt-14">
    <div class="container">
      <div class="row items-center justify-between">
        <div class="md:col-4">
          {
            banner.image && (
              <div class="flex justify-center">
                <ImageMod
                  src={banner.image}
                  height={280}
                  width={280}
                  alt="banner"
                  format="webp"
                />
              </div>
            )
          }
        </div>
        <div class="md:col-8">
          <div class="text-center md:text-left">
            <h1
              set:html={markdownify(banner.name)}
              class="mb-4 text-h3 lg:text-h1"
            />
            <h2
              set:html={markdownify(banner.title)}
              class="mb-4 text-h4 lg:text-h3 text-primary"
            />
            <p set:html={markdownify(banner.tagline)} class="mb-8 text-lg" />
          
          </div>
        </div>
      </div>
    </div>
  </section>
  <!-- /Banner -->

  <!-- Projects Section -->
  <section class="section-sm bg-gradient">
    <div class="container">
              <div class="row justify-center text-center">
          <div class="lg:col-8 md:col-10">
            <h2 class="mb-20 text-h3 lg:text-h2">{projects.title}</h2>
          </div>
        </div>
      <div class="row">
        {projects.items.map((project, index: number) => (
          <div class="md:col-4 mb-8 px-12">
            <div class="text-start group">
              <!-- Icon -->
              <div class="mb-6">
                <div class="flex h-16 w-16 items-center justify-center rounded-full bg-primary/10 text-primary">
                  <span class="text-2xl">
                    {project.icon === "database" && "üóÑÔ∏è"}
                    {project.icon === "chart" && "üìä"}
                    {project.icon === "brain" && "üß†"}
                  </span>
                </div>
              </div>
              <!-- Title -->
              <h3 class="mb-4 text-xl font-bold">{project.title}</h3>
              <!-- Description -->
              <p class="mb-6 text-muted">{project.description}</p>
              <!-- Links -->
              <div class="flex flex-col gap-2">
                {project.links.map((link) => (
                  <a
                    href={link.url}
                    class="text-sm text-primary hover:underline transition-colors"
                  >
                    {link.label} ‚Üí
                  </a>
                ))}
              </div>
            </div>
          </div>
        ))}
      </div>
    </div>
  </section>
  <!-- /Projects Section -->

  <!-- Publications Section -->
  <section class="section-sm">
    <div class="container">
              <div class="row justify-center text-center">
          <div class="lg:col-8 md:col-10">
            <h2 class="mb-20 text-h3 lg:text-h2">{publications.title}</h2>
          </div>
        </div>
      <div class="row">
        {publications.items.map((publication, index: number) => (
          <div class="md:col-4 mb-8 px-12">
            <div class="text-start group">
              <!-- Icon -->
              <div class="mb-6">
                <div class="flex h-16 w-16 items-center justify-center rounded-full bg-primary/10 text-primary">
                  <span class="text-2xl">
                    {publication.icon === "dna" && "üß¨"}
                    {publication.icon === "microscope" && "üî¨"}
                    {publication.icon === "cloud" && "‚òÅÔ∏è"}
                  </span>
                </div>
              </div>
              <!-- Title -->
              <h3 class="mb-3 text-xl font-bold">{publication.title}</h3>
              <!-- Journal & Year -->
              <p class="mb-4 text-sm text-muted">
                {publication.journal}, {publication.year}
              </p>
              <!-- Description -->
              <p class="mb-6 text-muted">{publication.description}</p>
              <!-- Links -->
              <div class="flex flex-col gap-2">
                {publication.links.map((link) => (
                  <a
                    href={link.url}
                    class="text-sm text-primary hover:underline transition-colors"
                  >
                    {link.label} ‚Üí
                  </a>
                ))}
              </div>
            </div>
          </div>
        ))}
      </div>
    </div>
  </section>
  <!-- /Publications Section -->

  <!-- Call to Action Section -->
  <section class="section-sm bg-gradient">
    <div class="container">
      <div class="row justify-center text-center">
        <div class="lg:col-8 md:col-10">
          <h2 class="mb-4 text-h3 lg:text-h2">{cta.title}</h2>
          <p class="mb-8 text-lg">{cta.description}</p>
          <div class="flex flex-wrap justify-center gap-4">
            {cta.links.map((link) => (
              <a
                href={link.url}
                class="btn btn-outline-primary"
              >
                {link.label}
              </a>
              ))}
          </div>
        </div>
      </div>
    </div>
  </section>
  <!-- /Call to Action Section -->

</Base>
